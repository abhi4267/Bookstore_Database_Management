CREATE TABLE Authors (
    author_id INT PRIMARY KEY,
    author_name VARCHAR(100) NOT NULL
);

CREATE TABLE Books (
    book_id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    genre VARCHAR(50),
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL,
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    address VARCHAR(255)
);

CREATE TABLE Orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);

CREATE TABLE OrderDetails (
    order_detail_id INT PRIMARY KEY,
    order_id INT,
    book_id INT,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (book_id) REFERENCES Books(book_id)
);

#Sample Data :
INSERT INTO Authors (author_id, author_name) VALUES
    (1, 'Author 1'),
    (2, 'Author 2');

INSERT INTO Books (book_id, title, author_id, genre, price, stock_quantity) VALUES
    (1, 'Book 1', 1, 'Fiction', 19.99, 100),
    (2, 'Book 2', 1, 'Non-Fiction', 29.99, 50),
    (3, 'Book 3', 2, 'Mystery', 24.99, 75);

INSERT INTO Customers (customer_id, customer_name, email, address) VALUES
    (1, 'Customer 1', 'customer1@example.com', '123 Main St'),
    (2, 'Customer 2', 'customer2@example.com', '456 Oak Ave');

INSERT INTO Orders (order_id, customer_id, order_date) VALUES
    (1, 1, '2024-02-01'),
    (2, 2, '2024-02-03');

INSERT INTO OrderDetails (order_detail_id, order_id, book_id, quantity, price) VALUES
    (1, 1, 1, 2, 39.98),
    (2, 1, 2, 1, 29.99),
    (3, 2, 3, 3, 74.97);

#Retrieve a list of top-selling books:
SELECT b.title, a.author_name, SUM(od.quantity) AS total_sold
FROM Books b
JOIN Authors a ON b.author_id = a.author_id
JOIN OrderDetails od ON b.book_id = od.book_id
GROUP BY b.book_id
ORDER BY total_sold DESC
LIMIT 10;


#total sales revenue
SELECT SUM(od.quantity * od.price) AS total_revenue
FROM OrderDetails od
JOIN Orders o ON od.order_id = o.order_id
WHERE o.order_date BETWEEN 'start_date' AND 'end_date';
